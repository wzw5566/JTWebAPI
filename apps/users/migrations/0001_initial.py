# Generated by Django 2.1.4 on 2019-02-02 06:25

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=64, verbose_name='姓名')),
                ('mobile', models.IntegerField(blank=True, null=True, verbose_name='手机号')),
                ('sex', models.BooleanField(default=0, verbose_name='性别')),
                ('join_time', models.DateField(blank=True, null=True, verbose_name='入职时间')),
                ('leave_time', models.DateField(blank=True, null=True, verbose_name='离职时间')),
                ('user_desc', models.TextField(blank=True, null=True, verbose_name='员工介绍')),
                ('state', models.BooleanField(default=0, verbose_name='员工状态')),
                ('avatar', models.URLField(blank=True, null=True, verbose_name='用户头像链接地址')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='生日')),
                ('is_delete', models.BooleanField(default=0, verbose_name='是否逻辑删除')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('depat_id', models.AutoField(primary_key=True, serialize=False, verbose_name='自增id主键')),
                ('depat_name', models.CharField(max_length=64, verbose_name='部门名称')),
                ('depat_fid', models.IntegerField(default=0, verbose_name='父级部门id')),
                ('depat_desc', models.TextField(verbose_name='部门描述')),
                ('is_delete', models.BooleanField(default=0, verbose_name='是否逻辑删除')),
            ],
            options={
                'verbose_name': '部门',
                'verbose_name_plural': '部门',
                'db_table': 'jt_department',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('role_id', models.AutoField(primary_key=True, serialize=False, verbose_name='自增id主键')),
                ('role_name', models.CharField(max_length=100, verbose_name='角色名')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('role_desc', models.TextField(blank=True, null=True, verbose_name='角色描述')),
                ('is_delete', models.BooleanField(default=0, verbose_name='是否逻辑删除')),
            ],
            options={
                'verbose_name': '角色',
                'verbose_name_plural': '角色',
                'db_table': 'jt_role',
            },
        ),
        migrations.AddField(
            model_name='userprofile',
            name='depat_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_depat', to='users.Department', verbose_name='用户部门'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='roles',
            field=models.ManyToManyField(related_name='user_roles', to='users.Role', verbose_name='用户角色'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
